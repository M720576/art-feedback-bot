import logging
import os
import re
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import FSInputFile
from db_pg import (
    init_db,
    add_user,
    get_attempts,
    decrement_attempt,
    reset_attempts,
    count_users,
    count_users_with_zero_attempts,
    count_feedbacks
)

API_TOKEN = os.getenv("BOT_TOKEN")
OWNER_CHAT_ID = int(os.getenv("OWNER_CHAT_ID", "-1002092711646"))  # —á–∞—Ç –¥–ª—è —Ñ–∏–¥–±–µ–∫–æ–≤ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
FREE_LIMIT = int(os.getenv("FREE_LIMIT", 3))

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã
init_db()

# –•–µ–ª–ø–µ—Ä: –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ, —Ñ–æ—Ç–æ —ç—Ç–æ –∏–ª–∏ –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è
def is_photo(file_name: str) -> bool:
    ext = file_name.lower().split('.')[-1]
    return ext in ["jpg", "jpeg", "png"]  # –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–±, –º–æ–∂–Ω–æ —Ä–∞—Å—à–∏—Ä–∏—Ç—å —á–µ—Ä–µ–∑ file.mime_type

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    user_id = message.from_user.id
    add_user(user_id)
    await message.answer(
        "üé® –ü—Ä–∏–≤–µ—Ç! –Ø –∞—Ä—Ç-–¥–∏—Ä–µ–∫—Ç–æ—Ä —Å –æ–ø—ã—Ç–æ–º –≤ —Å—Ç–æ –ª–µ—Ç, –Ω–æ —Å–ª–µ–≥–∫–∞ –ø–æ–µ—Ö–∞–≤—à–∏–π.\n"
        "–ü—Ä–∏—Å—ã–ª–∞–π –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—é, —ç—Å–∫–∏–∑ –∏–ª–∏ —Å–∫–µ—Ç—á, –∏ —è –¥–∞–º —Ç–µ–±–µ –æ—Ü–µ–Ω–∫—É –ø–æ 10-–±–∞–ª—å–Ω–æ–π —à–∫–∞–ª–µ.\n"
        f"–£ —Ç–µ–±—è –µ—Å—Ç—å {FREE_LIMIT} –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫!"
    )

# –ö–æ–º–∞–Ω–¥–∞ /stats ‚Äî –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª—å—Ü—É
@dp.message(Command("stats"))
async def send_stats(message: types.Message):
    if message.chat.id != OWNER_CHAT_ID:
        await message.answer("‚õî –£ —Ç–µ–±—è –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return

    total_users = count_users()
    zero_attempts = count_users_with_zero_attempts()
    total_feedbacks = count_feedbacks()

    stats_text = (
        "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è:\n"
        f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}\n"
        f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ –ø–æ–ø—ã—Ç–æ–∫: {zero_attempts}\n"
        f"üí¨ –ü–æ–ª—É—á–µ–Ω–æ —Ñ–∏–¥–±–µ–∫–æ–≤: {total_feedbacks}"
    )

    await bot.send_message(OWNER_CHAT_ID, stats_text)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
@dp.message(lambda m: m.photo or (m.document and is_photo(m.document.file_name)))
async def handle_image(message: types.Message):
    user_id = message.from_user.id
    attempts = get_attempts(user_id)

    if attempts <= 0:
        await message.answer(
            "‚õî –£ —Ç–µ–±—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–æ–ø—ã—Ç–∫–∏!\n"
            "–ù–∞–ø–∏—à–∏, —á—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –∏–ª–∏ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –≤ –±–æ—Ç–µ, –∏ —è –¥–∞–º –µ—â—ë 3 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö."
        )
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ñ–æ—Ç–æ
    if message.photo:
        await message.answer("üì∑ –≠—Ç–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Ñ–æ—Ç–æ. –Ø —Ä–∞–±–æ—Ç–∞—é —Ç–æ–ª—å–∫–æ —Å –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è–º–∏, —Ä–∏—Å—É–Ω–∫–∞–º–∏ –∏ —ç—Å–∫–∏–∑–∞–º–∏.")
        return

    decrement_attempt(user_id)

    score = 7  # —Ç—É—Ç –º–æ–∂–Ω–æ –≤–Ω–µ–¥—Ä–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é –æ—Ü–µ–Ω–∫—É
    review = (
        f"üéØ –û—Ü–µ–Ω–∫–∞: {score}/10\n"
        "1Ô∏è‚É£ –°–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã: –¥–∏–Ω–∞–º–∏–∫–∞, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏, —Å–º–µ–ª—ã–µ —Ä–µ—à–µ–Ω–∏—è.\n"
        "2Ô∏è‚É£ –°–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã: –∫–æ–µ-–≥–¥–µ –∫–∞—à–∞ –≤ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏.\n"
        "3Ô∏è‚É£ –°–æ–≤–µ—Ç—ã: –ø–æ–¥—á–∏—Å—Ç–∏ –ª–∏–Ω–∏–∏, –¥–æ–±–∞–≤—å –≤–æ–∑–¥—É—Ö–∞ –∏ –Ω–µ –±–æ–π—Å—è —É–±–∏—Ä–∞—Ç—å –ª–∏—à–Ω–µ–µ.\n"
        "üí• –û–±—â–∏–π –≤–µ—Ä–¥–∏–∫—Ç: –£ —Ç–µ–±—è —Ç–∞–ª–∞–Ω—Ç, –Ω–æ –¥–∞–≤–∞–π –ø–æ–¥–Ω–∞–∂–º—ë–º!"
    )

    await message.answer(review)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∏–¥–±–µ–∫–∞
@dp.message(lambda m: not m.photo and not m.document and not m.text.startswith("/"))
async def handle_feedback(message: types.Message):
    user_id = message.from_user.id
    attempts = get_attempts(user_id)

    if attempts > 0:
        return  # —Ñ–∏–¥–±–µ–∫ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–æ–ø—ã—Ç–∫–∏

    feedback_text = f"üì¢ –§–∏–¥–±–µ–∫ –æ—Ç {message.from_user.username or message.from_user.id}:\n{message.text}"
    await bot.send_message(OWNER_CHAT_ID, feedback_text)

    reset_attempts(user_id)
    await message.answer("‚úÖ –ü—Ä–∏–Ω—è–ª —Ñ–∏–¥–±–µ–∫! –Ø –¥–æ–±–∞–≤–∏–ª —Ç–µ–±–µ –µ—â—ë 3 –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ø–æ–ø—ã—Ç–∫–∏.")

if __name__ == "__main__":
    import asyncio
    asyncio.run(dp.start_polling(bot))
